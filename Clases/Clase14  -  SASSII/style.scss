/* Fonts - inicio */
@import url("https://fonts.googleapis.com/css2?family=Barlow&family=Mochiy+Pop+P+One&family=Roboto:wght@100&display=swap");

$font1: "Barlow", sans-serif;
$font2: "Mochiy Pop P One", sans-serif;
$font3: "Roboto", sans-serif;

h2 {
  text-align: center;
  font-size: 50px;
  text-transform: uppercase;
  color: blue;
  text-shadow: 5px 5px 10px #333;
  font-family: sans-serif;
}
/* Fonts - fin */

// sass nos permite la incorporacion sencilla de operaciones matematicas

// operadores - inicio
$ancho: 720px;
$alto: 200px;

$var1: 100%;
$var2: 50%;

$blue: blue;
$green: green;
$red: red;
$black: black;
$white: rgb(10, 5, 5);

$xs: 15px;
$small: 20px;
$med: 40px;
$large: 60px;
$xl: 80px;

// paletas de colores

$color1: #ff000f;
$color2: #ff000f;
$color3: #ff000f;
$color4: #ff000f;
$color5: #fafa0f;
$color6: #dfa00f;

// dimensiones

$size1: 100%;
$size1: 50%;
$size1: 20px;
$size1: 50px;

// fonts

$font4: cursive;
$font5: cursive;
$font6: cursive;
$font7: cursive;
$font8: "Oswald", sans-serif;

.box__uno {
  background-color: $blue;
  width: ($var1) - ($var2);
  /* Ancho de 50% */
  height: $alto * 2;
  /* altura 400px */
}

.box__dos {
  background-color: $green;
  width: ($ancho/2)-250;
  height: $alto + 450;
  /*650px*/
}
// operadores - fin

$size: 150px;

.titulo {
  font-size: ($size/2)-40;
  //  math.div($size, 2);
  color: $red;
  text-align: center;
  font-family: $font5;
}

// los condicionales permiten establecer reglas para
// cambios o asignacion en el atributo de un elemento
// estas condiciones podran incluir compadores tipicos
// == igual
// != distinto
// < menor
// > mayor
// <= menor o igual
// >= mayor o igual

p {
  height: $alto;
  width: $ancho;
  background-color: $red;
  font-size: $large;
  text-align: center;
}

/* condicionales - inicio */

$animal: hola;

// mi constante

p {
  @if $animal == gato {
    color: tomato;
    background-color: turquoise;
  } @else if $animal==perro {
    color: teal;
  } @else if $animal==caballo {
    color: green;
  } @else {
    color: coral;
    background-color: #333;
  }
}

// otro ejemplo de condicional

.cont1 {
  height: 400px;
  width: 700px;
}

$img1: egret;
$img2: puma;
$img3: sea-slug;
$img4: otro;
$animal: $img3;

// Mi constante

.cont1 {
  @if $animal == egret {
    color: orange;
    background-image: url("../img/egret.jpg");
    background-position: center;
    background-size: cover;
  } @else if $animal==$img2 {
    color: red;
    background-color: yellow;
    background-image: url("../img/puma.jpg");
    background-position: center;
    background-size: cover;
  } @else if $animal==$img3 {
    color: green;
    background-image: url("../img/sea-slug.jpg");
    background-position: center;
    background-size: cover;
  } @else {
    color: coral;
    background-color: #fff;
  }
}
/* condicionales - fin */

// un bucle es una  secuencia que repite mas de una vez
// cuando la misma deja de cumplirse, el bucle finaliza

// bucles - inicio

.para {
  height: 200px;
  background-color: yellow;
  border: 2px solid #333;
}

@for $i from 1 through 3 {
  // $i: 6;
  .casitodo-#{$i} {
    width: 6em * $i;
    // font-size: 20px * $i
  }
  // $i: $i -2
}

@for $in from 1 through 5 {
  .bucle-#{$in} {
    width: 400px;
    height: 200px;
    background-color: purple;
    border: 2px solid #333;
    text-align: center;
    font-size: 50px;
  }
}

$base-color: #036;
$base-color: #3ff;

@for $in from 1 through 5 {
  .bucle-#{$in} {
    background-color: lighten($base-color, $in * 10%);
    // background-color: darken($base-color, $in * 10%);
  }
}
// bucles - fin

// each - inicio

.puma-icon,
.egret-icon,
.sea-slug-icon {
  height: 250px;
  width: 400px;
  border: 2px solid #333;
}

@each $animal in puma, sea-slug, egret {
  .#{$animal}-icon {
    // background-image: url("img/puma.jpg");
    background-image: url("../img/#{$animal}.jpg");
    background-position: center;
    background-size: cover;
  }
}

// animal tendra las valores de cada uno

// otro ejemplo de uso de @each

$colores: red, blue, black, orange, violet;

@each $color in $colores {
  .color-#{$color} {
    border-color: $color;
    color: $color;
    background-color: $color;
    font-size: 60px;
    text-shadow: 5px 5px 5px #fff;
    border: 2px solid;
    height: 200px;
    width: 600px;
  }
}

// each - fin

// los mapas son variables cuyo valor es una coleccion
// se definen con un nombre que los identifica
// mientras que los valores pueden ser cualquier tipo
// ejemplo: $map: (key1: value1,  key2: value2, key3: value3

// maps - inicio

$redes: (
  /* declaramos nuestro mapa */ red1: cursive,
  red2: monospace,
  red3: serif
);

/* creamos el bucle para usar los valores del mapa */

@each $red, $font in $redes {
  .btn--#{$red} {
    background-color: #333;
    height: 200px;
    width: 500px;
    border: 2px solid #111;
    text-align: center;
    font-size: 50px;
    line-height: 200px;
    color: #fff;
    text-transform: uppercase;
    text-shadow: 0 0 5px #f00;
    font-family: $font;
  }
}
// maps - fin

// extend - inicio
.redsocial {
  border: 3px solid #f00;
  background-color: orangered;
  height: 300px;
  width: 600px;
  padding: 20px;
}

.redsocial--nueva {
  @extend .redsocial;
  border-width: 3px;
  color: #fff;
  font-size: $large;
}
// extend - fin

// mixins - inicio

.box {
  background-color: $green;
  font-size: $large;
  color: #fff;
  text-align: center;
}

@mixin sizes($width, $height, $bcolor) {
  height: $height;
  width: $width;
  background-color: $bcolor;
}

.box {
  @include sizes(600px, 300px, blue);
}

.box2 {
  @include sizes(400px, 500px, green);
  // background-color: red;
  color: white;
  text-align: center;
  font-size: $large;
}
// mixins - fin
